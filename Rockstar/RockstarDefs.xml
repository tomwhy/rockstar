<?xml version="1.0" encoding="utf-8"?>

<root>
  <defines>
    <Keyword>
      <Let />
      <Be />
      <Into />
      <Put />
      <Say />
      <At />
      <With/>
      <Cut/>
      <Join/>
      <Cast/>
    </Keyword>
    
    <Index>
      <sequence>
        <At/>
        <Expression name="exp"/>
      </sequence>
    </Index>
    
    <Expression>
      <Literal />
      <Variable />
    </Expression>

    <Variable>
      <sequence>
        <or>
          <Pronoun />
          <VariableName name="var"/>
        </or>
        <Index optional="true" name="idx"/>
      </sequence>
    </Variable>

    <Literal>
      <Mysterious />
      <Null />
      <Boolean />
      <Number />
      <String />
    </Literal>
  </defines>
  <tokens>
    <At>
      <contains>
        <regex icase="true">at</regex>
      </contains>
    </At>

    <VariableName>
      <contains>
        <regex>(:?[aA][nN]?|[Tt][Hh][Ee]|[Mm][Yy]|[Yy][Oo][Uu][Rr])\s+[a-z]+</regex>
        <regex times="*">[A-Z][A-Za-z]+</regex>
        <regex>[A-Za-z]+</regex>
      </contains>
      <invalid>
        <Keyword />
      </invalid>
    </VariableName>

    <Mysterious>
      <contains>
        <regex icase="true">mysterious</regex>
      </contains>
    </Mysterious>
    <Null>
      <contains>
        <regex icase="true">null</regex>
        <regex icase="true">nothing</regex>
        <regex icase="true">nowhere</regex>
        <regex icase="true">nobody</regex>
        <regex icase="true">empty</regex>
        <regex icase="true">gone</regex>
      </contains>
    </Null>
    <Boolean>
      <contains>
        <True />
        <False />
      </contains>
    </Boolean>
    <Number>
      <contains>
        <regex>-?\d+(:?.\d+)?</regex>
      </contains>
    </Number>
    <String>
      <contains>
        <regex>"(:?[^"]|\\.)*?"</regex>
      </contains>
    </String>
    <True>
      <contains>
        <regex icase="true">right</regex>
        <regex icase="true">yes</regex>
        <regex icase="true">ok</regex>
        <regex icase="true">true</regex>
      </contains>
    </True>
    <False>
      <contains>
        <regex icase="true">wrong</regex>
        <regex icase="true">no</regex>
        <regex icase="true">lies</regex>
        <regex icase="true">false</regex>
      </contains>
    </False>

    <Cut>
      <contains>
        <regex icase="true">cut</regex>
        <regex icase="true">split</regex>
        <regex icase="true">shatter</regex>
      </contains>
    </Cut>
    <Empty>
      <contains>
        <regex>^\s*$</regex>
      </contains>
    </Empty>
    <Join>
      <contains>
        <regex icase="true">join</regex>
        <regex icase="true">unite</regex>
      </contains>
    </Join>
    <Cast>
      <contains>
        <regex icase="true">cast</regex>
      </contains>
    </Cast>
    <Let>
      <contains>
        <regex icase="true">let</regex>
      </contains>
    </Let>
    <Be>
      <contains>
        <regex icase="true">be</regex>
      </contains>
    </Be>
    <Put>
      <contains>
        <regex icase="true">put</regex>
      </contains>
    </Put>
    <Into>
      <contains>
        <regex icase="true">into</regex>
      </contains>
    </Into>
    <With>
      <contains>
        <regex icase="true">with</regex>
      </contains>
    </With>
    <Say>
      <contains>
        <regex icase="true">say</regex>
        <regex icase="true">shout</regex>
        <regex icase="true">whisper</regex>
        <regex icase="true">scream</regex>
      </contains>
    </Say>
    <Pronoun>
      <contains>
        <regex icase="true">it</regex>
        <regex icase="true">he</regex>
        <regex icase="true">she</regex>
        <regex icase="true">him</regex>
        <regex icase="true">her</regex>
        <regex icase="true">they</regex>
        <regex icase="true">ze</regex>
        <regex icase="true">hir</regex>
        <regex icase="true">zie</regex>
        <regex icase="true">zir</regex>
        <regex icase="true">xe</regex>
        <regex icase="true">xem</regex>
        <regex icase="true">ve</regex>
        <regex icase="true">ver</regex>
      </contains>
    </Pronoun>
  </tokens>
  <statements>
    <Assign>
      <sequence>
        <Let />
        <Variable name="var" />
        <Be />
        <Expression name="value" />
      </sequence>
      <sequence>
        <Put />
        <Expression name="value" />
        <Into />
        <Variable name="var" />
      </sequence>
    </Assign>
    <Print>
      <sequence>
        <Say />
        <Expression name="value" />
      </sequence>
    </Print>
    <Modify>
      <sequence>
        <or name="op">
          <Join/>
          <Cut/>
          <Cast/>
        </or>
        <Expression name="exp"/>
        <or optional="true">
          <sequence>
            <Into/>
            <Variable name="dest"/>
            <sequence optional="true">
              <With/>
              <Expression name="arg"/>
            </sequence>
          </sequence>
          <sequence>
            <With/>
            <Expression name="arg"/>
          </sequence>
        </or>
      </sequence>
    </Modify>
    <EndBlock>
      <sequence>
        <Empty/>
      </sequence>
    </EndBlock>
  </statements>
</root>